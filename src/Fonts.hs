{-# LANGUAGE LambdaCase #-}

module Fonts (module Fonts) where

import Data.Map (Map, fromList, (!?))

-- | all unicode fonts
data Font = Sup | Sub | Bold | Italic | Cal | Frak | BB | SF | TT | Scr deriving (Show, Eq)

getFontMap :: Font -> Map Char Char
getFontMap = \case
  Sup -> supMap
  Sub -> subMap
  Bold -> boldMap
  Italic -> italicMap
  Cal -> calMap
  Frak -> frakMap
  BB -> bbMap
  SF -> sfMap
  TT -> ttMap
  Scr -> scrMap

-- | Convert a font into a latex command
--
-- For example `Sup` will be converted to `"^"`
-- and `Cal` will be converted to `"\mathcal"`.
--
-- we will convert the font to math font, instead of text font,
-- given the use case of converting documents using unicode-latex.
-- this can be subject to change if there are other use cases.
getCommandPrefix :: Font -> String
getCommandPrefix = \case
  Sup -> "^"
  Sub -> "_"
  Bold -> "\\mathbf"
  Italic -> "\\mathit"
  Cal -> "\\mathcal"
  Frak -> "\\mathfrak"
  BB -> "\\mathbb"
  SF -> "\\mathsf"
  TT -> "\\mathtt"
  Scr -> "\\mathscr"

-- | Convert a unicode string of a specific font to ascii
convertFont :: Font -> String -> String
convertFont font uniStr =
  let fontMap = getFontMap font
      prefix = getCommandPrefix font
   in case mapM (fontMap !?) uniStr of
        Just converted -> prefix ++ "{" ++ converted ++ "}"
        Nothing -> error "Internal Error, this is a bug, please consider reporting it: cannot convert some element in \"" ++ uniStr ++ "\""

supMap :: Map Char Char
supMap =
  fromList
    [ ('⁰', '0'),
      ('ⁱ', 'i'),
      ('¹', '1'),
      ('²', '2'),
      ('³', '3'),
      ('⁴', '4'),
      ('⁵', '5'),
      ('⁶', '6'),
      ('⁷', '7'),
      ('⁸', '8'),
      ('⁹', '9'),
      ('⁺', '+'),
      ('⁻', '-'),
      ('⁼', '='),
      ('⁽', '('),
      ('⁾', ')'),
      ('ᵃ', 'a'),
      ('ᵇ', 'b'),
      ('ᶜ', 'c'),
      ('ᵈ', 'd'),
      ('ᵉ', 'e'),
      ('ᶠ', 'f'),
      ('ᵍ', 'g'),
      ('ʰ', 'h'),
      ('ⁱ', 'i'),
      ('ʲ', 'j'),
      ('ᵏ', 'k'),
      ('ˡ', 'l'),
      ('ᵐ', 'm'),
      ('ⁿ', 'n'),
      ('ᵒ', 'o'),
      ('ᵖ', 'p'),
      ('𐞥', 'q'),
      ('ʳ', 'r'),
      ('ˢ', 's'),
      ('ᵗ', 't'),
      ('ᵘ', 'u'),
      ('ᵛ', 'v'),
      ('ⱽ', 'v'),
      ('ʷ', 'w'),
      ('ˣ', 'x'),
      ('ʸ', 'y'),
      ('ᶻ', 'z'),
      ('ᴬ', 'A'),
      ('ᴮ', 'B'),
      ('ꟲ', 'C'),
      ('ᴰ', 'D'),
      ('ᴱ', 'E'),
      ('ꟳ', 'F'),
      ('ᴳ', 'G'),
      ('ᴴ', 'H'),
      ('ᴵ', 'I'),
      ('ᴶ', 'J'),
      ('ᴷ', 'K'),
      ('ᴸ', 'L'),
      ('ᴹ', 'M'),
      ('ᴺ', 'N'),
      ('ᴼ', 'O'),
      ('ᴾ', 'P'),
      ('ꟴ', 'Q'),
      ('ᴿ', 'R'),
      ('ᵀ', 'T'),
      ('ᵁ', 'U'),
      ('ⱽ', 'V'),
      ('ᵂ', 'W')
    ]

subMap :: Map Char Char
subMap =
  fromList
    [ ('₀', '0'),
      ('₁', '1'),
      ('₂', '2'),
      ('₃', '3'),
      ('₄', '4'),
      ('₅', '5'),
      ('₆', '6'),
      ('₇', '7'),
      ('₈', '8'),
      ('₉', '9'),
      ('₊', '+'),
      ('₋', '-'),
      ('₌', '='),
      ('₍', '('),
      ('₎', ')'),
      ('ₐ', 'a'),
      ('ₑ', 'e'),
      ('ₕ', 'h'),
      ('ᵢ', 'i'),
      ('ⱼ', 'j'),
      ('ₖ', 'k'),
      ('ₗ', 'l'),
      ('ₘ', 'm'),
      ('ₙ', 'n'),
      ('ₒ', 'o'),
      ('ₚ', 'p'),
      ('ᵣ', 'r'),
      ('ₛ', 's'),
      ('ₜ', 't'),
      ('ᵤ', 'u'),
      ('ᵥ', 'v'),
      ('ₓ', 'x')
    ]

boldMap :: Map Char Char
boldMap =
  fromList
    [ ('𝐀', 'A'),
      ('𝐁', 'B'),
      ('𝐂', 'C'),
      ('𝐃', 'D'),
      ('𝐄', 'E'),
      ('𝐅', 'F'),
      ('𝐆', 'G'),
      ('𝐇', 'H'),
      ('𝐈', 'I'),
      ('𝐉', 'J'),
      ('𝐊', 'K'),
      ('𝐋', 'L'),
      ('𝐌', 'M'),
      ('𝐍', 'N'),
      ('𝐎', 'O'),
      ('𝐏', 'P'),
      ('𝐐', 'Q'),
      ('𝐑', 'R'),
      ('𝐒', 'S'),
      ('𝐓', 'T'),
      ('𝐔', 'U'),
      ('𝐕', 'V'),
      ('𝐖', 'W'),
      ('𝐗', 'X'),
      ('𝐘', 'Y'),
      ('𝐙', 'Z'),
      ('𝐚', 'a'),
      ('𝐛', 'b'),
      ('𝐜', 'c'),
      ('𝐝', 'd'),
      ('𝐞', 'e'),
      ('𝐟', 'f'),
      ('𝐠', 'g'),
      ('𝐡', 'h'),
      ('𝐢', 'i'),
      ('𝐣', 'j'),
      ('𝐤', 'k'),
      ('𝐥', 'l'),
      ('𝐦', 'm'),
      ('𝐧', 'n'),
      ('𝐨', 'o'),
      ('𝐩', 'p'),
      ('𝐪', 'q'),
      ('𝐫', 'r'),
      ('𝐬', 's'),
      ('𝐭', 't'),
      ('𝐮', 'u'),
      ('𝐯', 'v'),
      ('𝐰', 'w'),
      ('𝐱', 'x'),
      ('𝐲', 'y'),
      ('𝐳', 'z'),
      ('𝟎', '0'),
      ('𝟏', '1'),
      ('𝟐', '2'),
      ('𝟑', '3'),
      ('𝟒', '4'),
      ('𝟓', '5'),
      ('𝟔', '6'),
      ('𝟕', '7'),
      ('𝟖', '8'),
      ('𝟗', '9')
    ]

italicMap :: Map Char Char
italicMap =
  fromList
    [ ('𝐴', 'A'),
      ('𝐵', 'B'),
      ('𝐶', 'C'),
      ('𝐷', 'D'),
      ('𝐸', 'E'),
      ('𝐹', 'F'),
      ('𝐺', 'G'),
      ('𝐻', 'H'),
      ('𝐼', 'I'),
      ('𝐽', 'J'),
      ('𝐾', 'K'),
      ('𝐿', 'L'),
      ('𝑀', 'M'),
      ('𝑁', 'N'),
      ('𝑂', 'O'),
      ('𝑃', 'P'),
      ('𝑄', 'Q'),
      ('𝑅', 'R'),
      ('𝑆', 'S'),
      ('𝑇', 'T'),
      ('𝑈', 'U'),
      ('𝑉', 'V'),
      ('𝑊', 'W'),
      ('𝑋', 'X'),
      ('𝑌', 'Y'),
      ('𝑍', 'Z'),
      ('𝑎', 'a'),
      ('𝑏', 'b'),
      ('𝑐', 'c'),
      ('𝑑', 'd'),
      ('𝑒', 'e'),
      ('𝑓', 'f'),
      ('𝑔', 'g'),
      ('𝑖', 'i'),
      ('𝑗', 'j'),
      ('𝑘', 'k'),
      ('𝑙', 'l'),
      ('𝑚', 'm'),
      ('𝑛', 'n'),
      ('𝑜', 'o'),
      ('𝑝', 'p'),
      ('𝑞', 'q'),
      ('𝑟', 'r'),
      ('𝑠', 's'),
      ('𝑡', 't'),
      ('𝑢', 'u'),
      ('𝑣', 'v'),
      ('𝑤', 'w'),
      ('𝑥', 'x'),
      ('𝑦', 'y'),
      ('𝑧', 'z')
    ]

calMap :: Map Char Char
calMap =
  fromList
    [ ('ℰ', 'E'),
      ('ℱ', 'F'),
      ('ℊ', 'g'),
      ('ℋ', 'H'),
      ('ℐ', 'I'),
      ('ℒ', 'L'),
      ('ℳ', 'M'),
      ('ℛ', 'R'),
      ('ℬ', 'B'),
      ('𝒜', 'A'),
      ('𝒞', 'C'),
      ('𝒟', 'D'),
      ('𝒢', 'G'),
      ('𝒥', 'J'),
      ('𝒦', 'K'),
      ('𝒩', 'N'),
      ('𝒪', 'O'),
      ('𝒫', 'P'),
      ('𝒬', 'Q'),
      ('𝒮', 'S'),
      ('𝒯', 'T'),
      ('𝒰', 'U'),
      ('𝒱', 'V'),
      ('𝒲', 'W'),
      ('𝒳', 'X'),
      ('𝒴', 'Y'),
      ('𝒵', 'Z'),
      ('𝒶', 'a'),
      ('𝒷', 'b'),
      ('𝒸', 'c'),
      ('𝒹', 'd'),
      ('𝒻', 'f'),
      ('𝒽', 'h'),
      ('𝒾', 'i'),
      ('𝒿', 'j'),
      ('𝓀', 'k'),
      ('𝓁', 'l'),
      ('𝓂', 'm'),
      ('𝓃', 'n'),
      ('𝓅', 'p'),
      ('𝓆', 'q'),
      ('𝓇', 'r'),
      ('𝓈', 's'),
      ('𝓉', 't'),
      ('𝓊', 'u'),
      ('𝓋', 'v'),
      ('𝓌', 'w'),
      ('𝓍', 'x'),
      ('𝓎', 'y'),
      ('𝓏', 'z')
    ]

frakMap :: Map Char Char
frakMap =
  fromList
    [ ('ℌ', 'H'),
      ('ℜ', 'R'),
      ('ℭ', 'C'),
      ('ℨ', 'Z'),
      ('𝔄', 'A'),
      ('𝔅', 'B'),
      ('𝔇', 'D'),
      ('𝔈', 'E'),
      ('𝔉', 'F'),
      ('𝔊', 'G'),
      ('𝔍', 'J'),
      ('𝔎', 'K'),
      ('𝔏', 'L'),
      ('𝔐', 'M'),
      ('𝔑', 'N'),
      ('𝔒', 'O'),
      ('𝔓', 'P'),
      ('𝔔', 'Q'),
      ('𝔖', 'S'),
      ('𝔗', 'T'),
      ('𝔘', 'U'),
      ('𝔙', 'V'),
      ('𝔚', 'W'),
      ('𝔛', 'X'),
      ('𝔜', 'Y'),
      ('𝔞', 'a'),
      ('𝔟', 'b'),
      ('𝔠', 'c'),
      ('𝔡', 'd'),
      ('𝔢', 'e'),
      ('𝔣', 'f'),
      ('𝔤', 'g'),
      ('𝔥', 'h'),
      ('𝔦', 'i'),
      ('𝔧', 'j'),
      ('𝔨', 'h'),
      ('𝔩', 'l'),
      ('𝔪', 'm'),
      ('𝔫', 'n'),
      ('𝔬', 'o'),
      ('𝔭', 'p'),
      ('𝔮', 'q'),
      ('𝔯', 'r'),
      ('𝔰', 's'),
      ('𝔱', 't'),
      ('𝔲', 'u'),
      ('𝔳', 'v'),
      ('𝔴', 'w'),
      ('𝔵', 'x'),
      ('𝔶', 'y'),
      ('𝔷', 'z')
    ]

bbMap :: Map Char Char
bbMap =
  fromList
    [ ('ℂ', 'C'),
      ('ℍ', 'H'),
      ('ℕ', 'N'),
      ('ℙ', 'P'),
      ('ℚ', 'Q'),
      ('ℝ', 'R'),
      ('ℤ', 'Z'),
      ('𝔸', 'A'),
      ('𝔹', 'B'),
      ('𝔻', 'D'),
      ('𝔼', 'E'),
      ('𝔽', 'F'),
      ('𝔾', 'G'),
      ('𝕀', 'I'),
      ('𝕁', 'J'),
      ('𝕂', 'K'),
      ('𝕃', 'L'),
      ('𝕄', 'M'),
      ('𝕆', 'O'),
      ('𝕊', 'S'),
      ('𝕋', 'T'),
      ('𝕌', 'U'),
      ('𝕍', 'V'),
      ('𝕎', 'W'),
      ('𝕏', 'X'),
      ('𝕐', 'Y'),
      ('𝕒', 'a'),
      ('𝕓', 'b'),
      ('𝕔', 'c'),
      ('𝕕', 'd'),
      ('𝕖', 'e'),
      ('𝕗', 'f'),
      ('𝕘', 'g'),
      ('𝕙', 'h'),
      ('𝕚', 'i'),
      ('𝕛', 'j'),
      ('𝕜', 'k'),
      ('𝕝', 'l'),
      ('𝕞', 'm'),
      ('𝕟', 'n'),
      ('𝕠', 'o'),
      ('𝕡', 'p'),
      ('𝕢', 'q'),
      ('𝕣', 'r'),
      ('𝕤', 's'),
      ('𝕥', 't'),
      ('𝕦', 'u'),
      ('𝕧', 'v'),
      ('𝕨', 'w'),
      ('𝕩', 'x'),
      ('𝕪', 'y'),
      ('𝕫', 'z'),
      ('𝟘', '0'),
      ('𝟙', '1'),
      ('𝟚', '2'),
      ('𝟛', '3'),
      ('𝟜', '4'),
      ('𝟝', '5'),
      ('𝟞', '6'),
      ('𝟟', '7'),
      ('𝟠', '8'),
      ('𝟡', '9')
    ]

sfMap :: Map Char Char
sfMap =
  fromList
    [ ('𝟢', '0'),
      ('𝟣', '1'),
      ('𝟤', '2'),
      ('𝟥', '3'),
      ('𝟦', '4'),
      ('𝟧', '5'),
      ('𝟨', '6'),
      ('𝟩', '7'),
      ('𝟪', '8'),
      ('𝟫', '9'),
      ('𝖠', 'A'),
      ('𝖡', 'B'),
      ('𝖢', 'C'),
      ('𝖣', 'D'),
      ('𝖤', 'E'),
      ('𝖥', 'F'),
      ('𝖦', 'G'),
      ('𝖧', 'H'),
      ('𝖨', 'I'),
      ('𝖩', 'J'),
      ('𝖪', 'K'),
      ('𝖫', 'L'),
      ('𝖬', 'M'),
      ('𝖭', 'N'),
      ('𝖮', 'O'),
      ('𝖯', 'P'),
      ('𝖰', 'Q'),
      ('𝖱', 'R'),
      ('𝖲', 'S'),
      ('𝖳', 'T'),
      ('𝖴', 'U'),
      ('𝖵', 'V'),
      ('𝖶', 'W'),
      ('𝖷', 'X'),
      ('𝖸', 'Y'),
      ('𝖹', 'Z'),
      ('𝖺', 'a'),
      ('𝖻', 'b'),
      ('𝖼', 'c'),
      ('𝖽', 'd'),
      ('𝖾', 'e'),
      ('𝖿', 'f'),
      ('𝗀', 'g'),
      ('𝗁', 'h'),
      ('𝗂', 'i'),
      ('𝗃', 'j'),
      ('𝗄', 'k'),
      ('𝗅', 'l'),
      ('𝗆', 'm'),
      ('𝗇', 'n'),
      ('𝗈', 'o'),
      ('𝗉', 'p'),
      ('𝗊', 'q'),
      ('𝗋', 'r'),
      ('𝗌', 's'),
      ('𝗍', 't'),
      ('𝗎', 'u'),
      ('𝗏', 'v'),
      ('𝗐', 'w'),
      ('𝗑', 'x'),
      ('𝗒', 'y'),
      ('𝗓', 'z')
    ]

ttMap :: Map Char Char
ttMap =
  fromList
    [ ('𝟶', '0'),
      ('𝟷', '1'),
      ('𝟸', '2'),
      ('𝟹', '3'),
      ('𝟺', '4'),
      ('𝟻', '5'),
      ('𝟼', '6'),
      ('𝟽', '7'),
      ('𝟾', '8'),
      ('𝟿', '9'),
      ('𝙰', 'A'),
      ('𝙱', 'B'),
      ('𝙲', 'C'),
      ('𝙳', 'D'),
      ('𝙴', 'E'),
      ('𝙵', 'F'),
      ('𝙶', 'G'),
      ('𝙷', 'H'),
      ('𝙸', 'I'),
      ('𝙹', 'J'),
      ('𝙺', 'K'),
      ('𝙻', 'L'),
      ('𝙼', 'M'),
      ('𝙽', 'N'),
      ('𝙾', 'O'),
      ('𝙿', 'P'),
      ('𝚀', 'Q'),
      ('𝚁', 'R'),
      ('𝚂', 'S'),
      ('𝚃', 'T'),
      ('𝚄', 'U'),
      ('𝚅', 'V'),
      ('𝚆', 'W'),
      ('𝚇', 'X'),
      ('𝚈', 'Y'),
      ('𝚉', 'Z'),
      ('𝚊', 'a'),
      ('𝚋', 'b'),
      ('𝚌', 'c'),
      ('𝚍', 'd'),
      ('𝚎', 'e'),
      ('𝚏', 'f'),
      ('𝚐', 'g'),
      ('𝚑', 'h'),
      ('𝚒', 'i'),
      ('𝚓', 'j'),
      ('𝚔', 'k'),
      ('𝚕', 'l'),
      ('𝚖', 'm'),
      ('𝚗', 'n'),
      ('𝚘', 'o'),
      ('𝚙', 'p'),
      ('𝚚', 'q'),
      ('𝚛', 'r'),
      ('𝚜', 's'),
      ('𝚝', 't'),
      ('𝚞', 'u'),
      ('𝚟', 'v'),
      ('𝚠', 'w'),
      ('𝚡', 'x'),
      ('𝚢', 'y'),
      ('𝚣', 'z')
    ]

scrMap :: Map Char Char
scrMap =
  fromList
    [ ('𝒜', 'A'),
      ('ℬ', 'B'),
      ('𝒞', 'C'),
      ('𝒟', 'D'),
      ('ℰ', 'E'),
      ('ℱ', 'F'),
      ('𝒢', 'G'),
      ('ℋ', 'H'),
      ('ℐ', 'I'),
      ('𝒥', 'J'),
      ('𝒦', 'K'),
      ('ℒ', 'L'),
      ('ℳ', 'M'),
      ('𝒩', 'N'),
      ('𝒪', 'O'),
      ('𝒫', 'P'),
      ('𝒬', 'Q'),
      ('ℛ', 'R'),
      ('𝒮', 'S'),
      ('𝒯', 'T'),
      ('𝒰', 'U'),
      ('𝒱', 'V'),
      ('𝒲', 'W'),
      ('𝒳', 'X'),
      ('𝒴', 'Y'),
      ('𝒵', 'Z'),
      ('𝒶', 'a'),
      ('𝒷', 'b'),
      ('𝒸', 'c'),
      ('𝒹', 'd'),
      ('ℯ', 'e'),
      ('𝒻', 'f'),
      ('ℊ', 'g'),
      ('𝒽', 'h'),
      ('𝒾', 'i'),
      ('𝒿', 'j'),
      ('𝓀', 'k'),
      ('𝓁', 'l'),
      ('𝓂', 'm'),
      ('𝓃', 'n'),
      ('ℴ', 'o'),
      ('𝓅', 'p'),
      ('𝓆', 'q'),
      ('𝓇', 'r'),
      ('𝓈', 's'),
      ('𝓉', 't'),
      ('𝓊', 'u'),
      ('𝓋', 'v'),
      ('𝓌', 'w'),
      ('𝓍', 'x'),
      ('𝓎', 'y'),
      ('𝓏', 'z')
    ]
